{"_id":"libqp","_rev":"6-fa01020e269b17994125c6bf95701bb1","name":"libqp","description":"Encode and decode quoted-printable strings according to rfc2045","dist-tags":{"latest":"1.1.0"},"versions":{"0.1.0":{"name":"libqp","version":"0.1.0","description":"Encode and decode quoted-printable strings according to rfc2045","main":"lib/libqp.js","scripts":{"test":"grunt"},"repository":{"type":"git","url":"git://github.com/andris9/libqp.git"},"keywords":["quoted-printable","mime"],"author":{"name":"Andris Reinman"},"license":"MIT","bugs":{"url":"https://github.com/andris9/libqp/issues"},"homepage":"https://github.com/andris9/libqp","devDependencies":{"chai":"~1.8.1","grunt":"~0.4.1","grunt-contrib-jshint":"~0.8.0","grunt-mocha-test":"~0.10.0"},"_id":"libqp@0.1.0","dist":{"shasum":"b3df017ec233a1549b8338cdef9797a65403612b","tarball":"https://registry.npmjs.org/libqp/-/libqp-0.1.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"andris","email":"andris@node.ee"},"maintainers":[{"name":"andris","email":"andris@node.ee"}],"directories":{}},"0.1.1":{"name":"libqp","version":"0.1.1","description":"Encode and decode quoted-printable strings according to rfc2045","main":"lib/libqp.js","scripts":{"test":"grunt"},"repository":{"type":"git","url":"git://github.com/andris9/libqp.git"},"keywords":["quoted-printable","mime"],"author":{"name":"Andris Reinman"},"license":"MIT","bugs":{"url":"https://github.com/andris9/libqp/issues"},"homepage":"https://github.com/andris9/libqp","devDependencies":{"chai":"~1.8.1","grunt":"~0.4.1","grunt-contrib-jshint":"~0.8.0","grunt-mocha-test":"~0.10.0"},"_id":"libqp@0.1.1","dist":{"shasum":"2d10cabb96b14fe9649f4ae353a39baa90063b01","tarball":"https://registry.npmjs.org/libqp/-/libqp-0.1.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"andris","email":"andris@node.ee"},"maintainers":[{"name":"andris","email":"andris@node.ee"}],"directories":{}},"1.0.0":{"name":"libqp","version":"1.0.0","description":"Encode and decode quoted-printable strings according to rfc2045","main":"lib/libqp.js","scripts":{"test":"grunt"},"repository":{"type":"git","url":"git://github.com/andris9/libqp.git"},"keywords":["quoted-printable","mime"],"author":{"name":"Andris Reinman"},"license":"MIT","bugs":{"url":"https://github.com/andris9/libqp/issues"},"homepage":"https://github.com/andris9/libqp","devDependencies":{"chai":"~2.2.0","grunt":"~0.4.5","grunt-contrib-jshint":"~0.11.1","grunt-mocha-test":"~0.12.7"},"gitHead":"f1c844535ede953ba1fd621cda2457d47c62a233","_id":"libqp@1.0.0","_shasum":"aded044d83970c152de5b983d39c3b2d291f9a74","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"andris","email":"andris@kreata.ee"},"maintainers":[{"name":"andris","email":"andris@node.ee"}],"dist":{"shasum":"aded044d83970c152de5b983d39c3b2d291f9a74","tarball":"https://registry.npmjs.org/libqp/-/libqp-1.0.0.tgz"},"directories":{}},"1.1.0":{"name":"libqp","version":"1.1.0","description":"Encode and decode quoted-printable strings according to rfc2045","main":"lib/libqp.js","scripts":{"test":"grunt"},"repository":{"type":"git","url":"git://github.com/andris9/libqp.git"},"keywords":["quoted-printable","mime"],"author":{"name":"Andris Reinman"},"license":"MIT","bugs":{"url":"https://github.com/andris9/libqp/issues"},"homepage":"https://github.com/andris9/libqp","devDependencies":{"chai":"~3.3.0","grunt":"~0.4.5","grunt-contrib-jshint":"~0.11.3","grunt-mocha-test":"~0.12.7","mocha":"^2.3.3"},"gitHead":"af43f886d2fdf871f94dd8db7eaea1e7f881ea4f","_id":"libqp@1.1.0","_shasum":"f5e6e06ad74b794fb5b5b66988bf728ef1dedbe8","_from":".","_npmVersion":"2.14.3","_nodeVersion":"4.1.0","_npmUser":{"name":"andris","email":"andris@kreata.ee"},"dist":{"shasum":"f5e6e06ad74b794fb5b5b66988bf728ef1dedbe8","tarball":"https://registry.npmjs.org/libqp/-/libqp-1.1.0.tgz"},"maintainers":[{"name":"andris","email":"andris@node.ee"}],"directories":{}}},"readme":"# libqp\n\nEncode and decode quoted-printable strings according to [RFC2045](http://tools.ietf.org/html/rfc2045#section-6.7).\n\n## Usage\n\nInstall with npm\n\n    npm install libqp\n\nRequire in your script\n\n```javascript\nvar libqp = require('libqp');\n```\n\n### Encode values\n\nEncode Buffer objects or unicode strings with\n\n    libqp.encode(val) → String\n\nWhere\n\n  * **val** is a Buffer or an unicode string\n\n**Example**\n\n```javascript\nlibqp.encode('jõgeva');\n// j=C3=B5geva\n```\n\n### Wrap encoded values\n\nQuoted-Printable encoded lines are limited to 76 characters but `encode` method might return lines longer than the limit.\n\nTo enforce soft line breaks on lines longer than 76 (or any other length) characters, use `wrap`\n\n    libqp.wrap(str[, lineLength]) → String\n\nWhere\n\n  * **str** is a Quoted-Printable encoded string\n  * **lineLength** (defaults to 76) is the maximum allowed line length. Any longer line will be soft wrapped\n\n**Example**\n\n```javascript\nlibqp.wrap('abc j=C3=B5geva', 10)\n// abc j=\\r\\n\n// =C3=B5geva\n```\n\n### Transform Streams\n\n`libqp` makes it possible to encode and decode streams with `libqp.Encoder` and `libqp.Decoder` constructors.\n\n### Encoder Stream\n\nCreate new Encoder Stream with\n\n    var encoder = new libqp.Encoder([options])\n\nWhere\n\n  * **options** is the optional stream options object with an additional option `lineLength` if you want to use any other line length than the default 76 characters (or set to `false` to turn the soft wrapping off completely)\n\n**Example**\n\nThe following example script reads in a file, encodes it to Quoted-Printable and saves the output to a file.\n\n```javascript\nvar libqp = require('libqp');\nvar fs = require('fs');\nvar source = fs.createReadStream('source.txt');\nvar encoded = fs.createReadStream('encoded.txt');\nvar encoder = new libqp.Encoder();\n\nsource.pipe(encoder).pipe(encoded);\n```\n\n### Decoder Stream\n\nCreate new Decoder Stream with\n\n    var decoder = new libqp.Decoder([options])\n\nWhere\n\n  * **options** is the optional stream options object\n\n**Example**\n\nThe following example script reads in a file in Quoted-Printable encoding, decodes it and saves the output to a file.\n\n```javascript\nvar libqp = require('libqp');\nvar fs = require('fs');\nvar encoded = fs.createReadStream('encoded.txt');\nvar dest = fs.createReadStream('dest.txt');\nvar decoder = new libqp.Decoder();\n\nencoded.pipe(decoder).pipe(dest);\n```\n\n## License\n\n**MIT**","maintainers":[{"name":"andris","email":"andris@node.ee"}],"time":{"modified":"2015-09-24T12:04:25.827Z","created":"2014-06-18T08:10:29.115Z","0.1.0":"2014-06-18T08:10:29.115Z","0.1.1":"2014-06-18T13:28:06.642Z","1.0.0":"2015-04-03T20:35:42.307Z","1.1.0":"2015-09-24T12:04:25.827Z"},"homepage":"https://github.com/andris9/libqp","keywords":["quoted-printable","mime"],"repository":{"type":"git","url":"git://github.com/andris9/libqp.git"},"author":{"name":"Andris Reinman"},"bugs":{"url":"https://github.com/andris9/libqp/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"\"DVIU2OBEI00IN86ZJVXOQQYFF\""}