{
  // Type of this instance. It could be:
  //      center  - which takes role of orchestration center
  //      hub     - which is a service hub
  "type": "hub",

  // Optional - give a meaningful name for this instance
  // It isn't the id of this instance so no need to be unique
  "name": "yun",

  "init_script": "./init.js",

  // Optional - ID of this instance, and need to be globally unique
  // id: "an_unique_id_here",   


  // Defines how it can talk with other instances in the system
  // instances talk with each other through a message broker
  // typical message brokers could be mqtt etc., or a HTTP broker 
  // implemented by this project. Please check documentation for details
  "broker": {
    "type": "http",       // would use HTTP broker 
    "broker_url": "http://192.168.1.2:16666",     // URL of that broker
    "my_port": 18892      // assign a TCP/IP port for this instance to talk with broker
                          // if there is multiple instances in same machine
                          // they cann't share the same TCP/IP port
  },

  // Optional - Defines the log behavior. By default log is disabled
  "log": {
    "enabled": true,      // enable the log or not
    "verbose": true,      // show details or not
    "show_error_of_any_category": true, // show error log even if its category is disabled
    "show_warn_of_any_category": true,  // show warn log even if its category is disabled
    "levels": {           // which level of log would be printed out
      "debug": false,
      "info": true,
      "warn": true,
      "error": true
    },
    "categories": {       // show (or not show) log of specific category
      "*":      false,    // allow to use wildcard
      "message": false,
      "center": true,
      "entity": false,
      "hub": true,
      "heartbeat": false,
      "sm" : false
    }
  },



  // Optional - Where to store the Things and Services
  //            by default it is ./thing_bundle
  "thingbundle_path": "./thing_bundle",


  // Optional - Defines frequencies to report the heartbeat to center
  "heartbeat": {
    "interval": 20000   // heartbeat by every this amount of milliseconds
  }

}
