Since development first began on Spring in 2003, there's been a constant buzz about 
it in Java development publications and corporate IT departments. The reason is 
clear: Spring is a lightweight Java framework in a world of complex heavyweight 
architectures that take forever to implement. Spring is like a breath of fresh air 
to overworked developers. In Spring, you can make an object secure, remote, or transactional
, with a couple of lines of configuration instead of embedded code. The resulting application
 is simple and clean. In Spring, you can work less and go home early, because you 
 can strip away a whole lot of the redundant code that you tend to see in most J2EE
applications. You won't be nearly as burdened with meaningless detail. In Spring,
you can change your mind without the consequences bleeding through your entire 
application. You'll adapt much more quickly than you ever could before. Spring: 
A Developer's Notebook offers a quick dive into the new Spring framework, designed
to let you get hands-on as quickly as you like. If you don't want to bother with 
a lot of theory, this book is definitely for you. You'll work through one example
after another. Along the way, you'll discover the energy and promise of the Spring
framework. This practical guide features ten code-intensive labs that'll rapidly
get you up to speed. You'll learn how to do the following, and more: install the
Spring Framework set up the development environment use Spring with other open 
source Java tools such as Tomcat, Struts, and Hibernate master AOP and transactions 
utilize ORM solutions As with all titles in the Developer's Notebook series, 
this no-nonsense book skips all the boring prose and cuts right to the chase.
It's an approach that forces you to get your hands dirty by working through 
one instructional example after another-examples that speak to you instead of at you. 
