;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(query-replace-history buffer-name-history ido-buffer-history org-read-date-history helm-grep-history shell-command-history helm-file-name-history helm-occur-history tmm--history compile-history Man-topic-history grep-find-history gud-gdb-history ido-file-history helm-M-x-input-history read-expression-history minibuffer-history command-history file-name-history extended-command-history))
(setq query-replace-history '("point" "limit" "double" "float"))
(setq buffer-name-history '("Ann.cpp" "*eshell*" "*shell*"))
(setq ido-buffer-history '("*eshell*"))
(setq shell-command-history '("echo dd"))
(setq helm-file-name-history '("Sprite" "analysis.cpp" ".Xauthority" ".bash_profile" ".bash_history" ".bash_logout" "Ackerman.cpp" "Token.cpp" "a.out" "HeapSort.cpp" "graph.cpp"))
(setq tmm--history '("f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "c==>Compile" "h==>Help" "f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "c==>Compile" "h==>Help" "f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "c==>Compile" "h==>Help" "f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "c==>Compile" "h==>Help"))
(setq compile-history '("make " "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o out" "make" "g++ -o out Experiment.cpp -g" "g++ -o out Experiment.cpp" "make" "g++ Bayes.cpp -o out" "make" "g++ Bayes.cpp -o out" "g++ -o out.exe source.cpp" "g++ -O0 -g  source.cpp -o out.exe" "g++ -g  source.cpp -o out.exe" "g++ -g -f source.cpp -o out.exe" "make" "g++ Experiment.cpp -o out" "make" "g++ Experiment.cpp -o experiment.out" "make " "g++ -o hopeful tensorflow.cpp" "pwd" "make" "g++ -o read.out Experiment.cpp" "g++ -o out read.cpp" "make" "g++ -fpermissive source.cpp -o out" "gcc -lstdc++ Experiment.cpp -o a.out" "gcc --lstdc++ Experiment.cpp -o a.out" "make" "g++ TEST.cpp -o out" "make" "g++ TEST.cpp -o out" "make" "g++ TEST.cpp -o out" "make" "g++ TEST.cpp -o out" "make" "g++ TEST.cpp -o out" "make" "g++ TEST.cpp -o out -fpermissive" "g++ TEST.cpp -o out" "g++ serialization.cpp -o serialization" "g++ TEST.cpp -o test" "g++ -o test serialization.cpp" "g++ -o Test serialization.cpp" "g++ --permissive /home/eva/work/project/PatternRecognition/TEST.cpp -o temp" "g++ --permissive TEST.cpp -o temp" "g++ -permissive TEST.cpp -o temp" "g++ -permessive TEST.cpp -o temp" "g++ -premessive TEST.cpp -o temp" "g++ -permessive TEST.cpp -o temp" "g++ TEST.cpp -o temp" "make " "make -v -f Makefile" "make -v" "make -V " "make " "make -f Makefile" "g++ -g -fpermissive hhh.cpp" "g++ -g -fpermissive graph.cpp" "javac temp.java" "g++ -g -fpermissive MacroFind.cpp Scanner.h" "g++ -g -fpermissive Scanner.h MacroFind.cpp" "gcc -l stdc++ -fpermissive MacroFind.cpp Scanner.h" "gcc -l stdc++ MacroFind.cpp Scanner.h" "gcc -l stdc++ -g -fpermissive MacroFind.cpp Scanner.h" "g++ -g -fpermissive MacroFind.cpp Scanner.h" "g++ -g -fpermissive instr1.cpp" "g++ -g -fpermissive Scanner.h MacroFind.cpp" "g++ -g -fpermissive FINALLY.cpp" "g++ -g -fpermissive Scanner.h MacroFind.cpp" "g++ -g -fpermissive MacroFind.cpp Scanner.h" "g++ -g -fpermissive Scanner.h MacroFind.cpp" "g++ -g -fpermissive MacroFind.cpp Scanner.h" "g++ -g -fpermissive Scanner.h MacroFind.cpp" "g++ -g -fpermissive "))
(setq Man-topic-history '(".emacs" ".emacs" ".emacs" ".emacs" ".emacs" "411toppm(1)" "ldap.conf(5)"))
(setq grep-find-history '("find . -type f -exec grep -nH -e  {} +e" "find . -type f -exec grep -nH -e temp {} +" "find . -type f -exec grep -nH -e hah {} +" "find . -type f -exec grep -nH -e temp {} +"))
(setq gud-gdb-history '("gdb a.out" "gdb out.exe" "gdb out" "gdb out.exe" "gdb PatternRecognition" "gdb out.exe" "gdb --annotate=3 out.exe" "gdb --annotate=3 source.cpp " "gdb --annotate=3 source.cpp" "gdb --annotate=3 graph.cpp"))
(setq ido-file-history '(nil "c.org"))
(setq helm-M-x-input-history '("color" "ww" "w3" "slime" "comp" "replace-s" "w3" "org-mo" "vim" "com" "compi" "colo" "color" "vim" "color" "vim-color" "esh" "colo" "color" "shell" "repla" "color" #("x" 0 1 (fontified t face font-lock-variable-name-face)) "wee" "replace-" "repla" "re" "replace-" "replace" "my" "my-sh" "color-t" "shell" "color" "eww" "gdb" "colo" "gdb" "shell" "line" "color-" "color-theme" "eww" "past" "eww" "c++-mode" "c++mo" "ecb" "pack" #("5" 0 1 (fontified t)) "make-mo" "color-theme-se" "vim-" "c++" "dema" "dem" "pack" "ecb-a" "ecb-b" "pack" "Warning" "major-mode" "ecb-" "ecb" "ecb-m" "pack" "pac" "pack" "sl" "org-mode" #("实际就是中断判优" 0 8 (fontified t)) "text-mo" "c++-m" "colo" "eww" "colo" "org-cy" "tex" "org" "te" "pack" "text-mo" "eval" "color" #("4" 0 1 (fontified t)) "org" "color" "package-li" "glo" "flych" "jav" "color-th" "shell" "color" "packa" "color-theme-e" "color-" "color-theme-vim" "color" "c++"))
(setq read-expression-history '("q" "wq" "q" "q!" "q"))
(setq minibuffer-history '("/home/elvis/work/project/PatternRecognition/svm/Expriment/" "/home/elvis/work/pro" "/home/elvis/work/wor" "/home/elvis/work/" "/home/elvis/work/project/PatternRecognition/LeiNet/" "/home/elvis/work/" "www.baidu.com" "/home/elvis/work/project/PatternRecognition/svm/Expriment/pure/Tra" "/home/elvis/work/project/PatternRecognition/svm/tra" "/home/elvis/work/project/PatternRecognition/svm/Mak" "/home/elvis/work/project/PatternRecognition/svm/Tra" "/home/elvis/work/project/PatternRecognition/svm/Ma" "/home/elvis/work/project/PatternRecognition/svm/Tra" "/home/elvis/work/project/PatternRecognition/svm/An" "/home/elvis/work/project/PatternRecognition/svm/Tra" "/home/elvis/work/project/PatternRecognition/svm/Mak" "/home/elvis/work/project/PatternRecognition/svm/Tra" "/home/elvis/work/project/PatternRecognition/Tra" "/home/elvis/work/project/PatternRecognition/Ex" "/home/elvis/work/project/PatternRecognition/Mak" "/home/elvis/work/project/PatternRecognition/Tra" "/home/elvis/work/project/PatternRecognition/T" "80" "/home/elvis/work/project/PatternRecognition/Tr" "555" "/home/elvis/work/project/PatternRecognition/Tra" "www.baidu.com" "/sudo:root@localhost:/home/elvis/work/project/PatternRecognition/ppt." "/home/elvis/work/project/PatternRecognition/ppt.t" "/home/elvis/work/project/PatternRecognition/Tra" "/home/elvis/work/project/PatternRecognition/ppt.t" "/home/elvis/work/project/PatternRecognition/ppt.or" "/home/elvis/work/project/PatternRecognition/Tra" "/home/elvis/work/project/PatternRecognition/ppt.org" "/home/elvis/work/project/PatternRecognition/Tra" "/home/elvis/work/project/PatternRecognition/Train.cp" "/home/elvis/work/project/PatternRecognition/tra" "/home/elvis/Desktop/work/project/PatternRecognition/" "/home/elvis/Desktop/work/project/PatternRecognition/Train" "682" "/home/eva/work/project/PatternRecognition/Tra" "/home/eva/work/project/PatternRecognition/Ex" "/home/eva/work/project/PatternRecognition/Tra" "/home/eva/work/project/PatternRecognition/Ma" "/home/eva/work/project/PatternRecognition/Tra" "/home/eva/work/project/PatternRecognition/Ma" "/home/eva/work/project/PatternRecognition/An" "/home/eva/work/project/PatternRecognition/Train" "500" "/home/eva/work/project/PatternRecognition/Ex" "555" "/home/eva/work/project/PatternRecognition/Tra" "/home/eva/work/project/PatternRecognition/Ex" "544" "/home/eva/work/project/PatternRecognition/Ex" "555" "299" "/home/eva/work/project/PatternRecognition/Tra" "558" "/home/eva/work/project/PatternRecognition/Ma" "619" "/home/eva/work/project/PatternRecognition/Tra" "750" "/home/eva/work/project/PatternRecognition/Exp" "/home/eva/work/project/PatternRecognition/Ex" "/home/eva/work/project/PatternRecognition/Tra" "/home/eva/work/project/PatternRecognition/" "562" "/home/eva/work/project/PatternRecognition/" "361" "577" "571" "600" "544" "572" "555" "/home/eva/work/project/PatternRecognition/Tra" "/home/eva/work/cpp/" "/home/eva/work/project/PatternRecognition/" "/home/eva/work/project/PatternRecognition/tra" "501" "496" "558" "496" "497" "564" "519" "511" "512" "73" "/home/eva/work/project/PatternRecognition/An" "/home/eva/work/project/PatternRecognition/M" "/home/eva/work/project/PatternRecognition/Ex" "512" "230" "212" "512" "/home/eva/work/project/PatternRecognition/Ex" "428" "430"))
(setq command-history '((color-theme-select nil) (helm-M-x nil "color-theme-select") (color-theme-select nil) (helm-M-x nil "color-theme-select") (eww "www.baidu.com") (helm-M-x nil "eww") (browse-url-w3 "www.baidu.com" nil) (helm-M-x nil "browse-url-w3") (slime-mode 'toggle) (helm-M-x nil "slime-mode") (slime-mode 'toggle) (helm-M-x nil "slime-mode") (slime-interrupt) (helm-M-x nil "slime-interrupt") (slime-mode 'toggle) (helm-M-x nil "slime-mode") (compile "make " nil) (helm-M-x nil "compile") (gdb "gdb a.out") (eval-expression 'q nil) (helm-M-x nil "replace-string") (compile "make" nil) (compile "g++ Experiment.cpp -o out" nil) (compile "make" nil) (compile "g++ Experiment.cpp -o out" nil) (manual-entry ".emacs") (manual-entry ".emacs") (manual-entry ".emacs") (goto-line 80 nil) (goto-line 555 nil) (browse-url-w3 "www.baidu.com" nil) (helm-M-x nil "browse-url-w3") (org-mode) (helm-M-x nil "org-mode") (avy-goto-char 100 nil) (goto-line 682 nil) (color-theme-select nil) (helm-M-x nil "color-theme-select") (color-theme-vim-colors) (helm-M-x nil "color-theme-vim-colors") (compile "make" nil) (helm-M-x nil "compile") (compile "g++ Experiment.cpp -o out" nil) (helm-M-x nil "compile") (color-theme-select nil) (helm-M-x nil "color-theme-select") (color-theme-select nil) (helm-M-x nil "color-theme-select") (color-theme-select nil) (helm-M-x nil "color-theme-select") (color-theme-vim-colors) (helm-M-x nil "color-theme-vim-colors") (color-theme-vim-colors) (helm-M-x nil "color-theme-vim-colors") (color-theme-select nil) (helm-M-x nil "color-theme-select") (color-theme-vim-colors) (helm-M-x nil "color-theme-vim-colors") (goto-line 500 nil) (compile "g++ Experiment.cpp -o out" nil) (goto-line 555 nil) (compile "make" nil) (compile "g++ Experiment.cpp -o out" nil) (compile "g++ Experiment.cpp -o out" nil) (ibuffer-jump-to-buffer "Ann.cpp") (goto-line 544 nil) (avy-goto-char 108 nil) (avy-goto-char 127 nil) (compile "g++ Experiment.cpp -o out" nil) (avy-goto-char 108 nil) (compile "g++ Experiment.cpp -o out" nil) (compile "make" nil) (compile "g++ Experiment.cpp -o out" nil) (goto-line 555 nil) (goto-line 299 nil) (goto-line 558 nil) (gdb "gdb a.out") (goto-line 619 nil) (goto-line 750 nil) (compile "make" nil) (compile "g++ Experiment.cpp -o out" nil) (gdb "gdb a.out") (gdb "gdb a.out") (gdb "gdb a.out") (gdb "gdb a.out") (compile "make" nil) (my-eshell-clear-buffer) (helm-M-x nil "my-eshell-clear-buffer") (compile "g++ Experiment.cpp -o out" nil) (gdb "gdb a.out") (color-theme-select nil) (helm-M-x nil "color-theme-select") (color-theme-select nil) (helm-M-x nil "color-theme-select") (compile "make" nil) (shell nil) (helm-M-x nil "shell") (compile "g++ Experiment.cpp -o out" nil) (goto-line 562 nil) (gdb "gdb a.out") (gdb "gdb a.out")))
(setq file-name-history '("~/work/project/PatternRecognition/svm/Expriment/pure/Train.cpp" "~/work/project/PatternRecognition/svm/Makefile" "~/work/project/PatternRecognition/svm/Train.cpp" "~/work/project/PatternRecognition/svm/Ann.cpp" "~/work/project/PatternRecognition/Train.cpp" "~/work/project/PatternRecognition/Experiment.cpp" "~/work/project/PatternRecognition/Makefile" "~/work/project/PatternRecognition/TEST.cpp" "/sudo:root@localhost:/home/elvis/work/project/PatternRecognition/ppt.org" "~/work/project/PatternRecognition/ppt.txt" "~/work/project/PatternRecognition/ppt.org" "~/work/project/PatternRecognition/train.txt" "~/Desktop/work/project/PatternRecognition/Ann.cpp" "~/Desktop/work/project/PatternRecognition/Train.cpp" "~/work/project/PatternRecognition/Ann.cpp" "~/work/cpp/workermi.h" "~/work/cpp/textin4.cpp" "~/work/cpp/textin3.cpp" "~/work/cpp/test.h" "~/work/cpp/test_bug.cpp" "~/work/cpp/return_refren.cpp" "~/work/cpp/placenew1.cpp" "~/work/cpp/mytime.cpp" "~/work/cpp/fun_ptr.cpp" "~/work/cpp/calling.cpp" "~/work/project/PatternRecognition/Bayes.cpp" "~/work/project/B-Tree/Makefile" "~/work/project/B-Tree/Experiment.cpp" "~/work/project/B-Tree/out.cpp" "~/work/project/B-Tree/source.cpp" "~/work/project/B-Tree/window.o" "~/tensorflow/AUTHORS" "~/tensorflow/WORKSPACE" "~/work/project/PatternRecognition/read.cpp" "~/work/project/PatternRecognition/sample.txt" "~/work/project/B-Tree/window.cpp" "~/work/project/PatternRecognition/serialization.cpp" "/../home/eva/work/project/PatternRecognition/Ann.cpp" "/../home/eva/work/project/PatternRecognition/Train.cpp" "/../home/eva/work/project/PatternRecognition/TEST.cpp" "/../home/eva/work/project/PatternRecognition/Makefile" "~/work/project/PatternRecognition/ANN.cpp" "~/work/project/PatternRecognition/Tool.h" "~/.emacs.d/setup/personal/preload/my-configure.el" "~/_emacs/cykbd.el" "~/work/algorithms/test.cpp" "~/work/algorithms/temp.cpp" "~/work/text/practice" "/home/eva/work/.linux/c.org" "~/work/.algorithms/Heap.cpp" "~/work/.algorithms/Ackerman.cpp" "~/work/.algorithms/linear.cpp" "~/work/.algorithms/maze.cpp" "~/work/.algorithms/_link_stack.cpp" "~/work/project/DragonslayerC/MacroFind.cpp" "~/work/project/DragonslayerC/FINALLY.cpp" "~/work/project/DragonslayerC/Scanner.h" "~/work/.cpp/workermi.h" "~/work/project/DragonslayerC/Scanner.cpp" "~/work/project/DragonslayerC/Scanner.h.gch" "~/work/project/DragonslayerC/Test.cpp" "~/work/" "~/.bashrc" "~/work/.algorithms/BinarryTree.cpp" "~/.emacs.dp" "~/Bios - 罪恶王冠.mp3" "/sudo:root@localhost:/usr/include/qt4/Qt3Support/Q3CanvasSprite" "/sudo:root@localhost:/usr/include/qt4/Qt3Support/Q3CacheIterator" "/usr/include/qt4/Qt3Support/Q3CanvasSprite" "~/work/project/DragonslayerC/analysis.cpp" "~/.Xauthority" "~/.bash_profile" "~/.bash_history" "~/.bash_logout" "~/work/project/DragonslayerC/Token.cpp" "~/work/project/DragonslayerC/a.out" "~/work/.algorithms/HeapSort.cpp" "~/work/.algorithms/graph.cpp"))
(setq extended-command-history '("color-theme-select" "eww" "slime-mode" "slime-interrupt" "compile" "org-mode" "color-theme-vim-colors" "shell" "replace-string" "my-eshell-clear-buffer" "gdb" "line-number-mode" "c++-mode" "helm-info-ccmode" "package-list-packages" "makefile-automake-mode" "demangle-mode" "text-mode" "c-mode" "org-cycle" "prog-mode" "color-theme-euphoria" "global-linum-mode" "flycheck-mode" "java-mode" "column-number-mode" "read-color" "prelude-update" "lisp-mode" "load-theme"))
(setq search-ring '("E" "pru" "pur" "sv" "softm" "pro" "wor" "eu" "softmax" "sofmt" "pre_process" "softmax" "init" "weight" "init" "softmax"))
(setq regexp-search-ring '("adjust" "Get" "show I" "new node"))
